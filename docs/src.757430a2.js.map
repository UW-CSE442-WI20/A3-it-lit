{"version":3,"sources":["index.js"],"names":["diameter","pad","scale","d3","scaleSqrt","svg","select","append","attr","pack","size","padding","getFilteredData","data","intent","console","log","filter","d","Intent","csvFile","require","enterCircles","nestedData","nest","key","Race","rollup","sum","Math","round","Rate","entries","root","hierarchy","children","value","maxValue","getMaxValue","domain","range","length","node","selectAll","leaves","enter","i","x","y","text","transition","duration","style","getRandomColor","self","frameElement","exitCircles","remove","updateCircles","call","letters","color","floor","random","currMax","max","csv","Deaths","Population","parseFloat","then","$intentSelector","document","getElementById","onchange","e","target","intentData"],"mappings":"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","file":"src.757430a2.js","sourceRoot":"../src","sourcesContent":["// define functions for handling homicide & side-annotation\n\n// suicide & side-annotation\n\ndiameter = 600;\npad = 5;\nvar scale = d3.scaleSqrt();\nvar svg = d3.select(\"body\").append(\"svg\");\nsvg.attr(\"width\", diameter).attr(\"height\", diameter);\n\nvar pack = d3.pack()\n    .size([diameter-50, diameter])\n    .padding(pad);\n\nfunction getFilteredData(data, intent) {\n  console.log(intent);\n  if (intent == 1) { // double equals allows interpolation\n    // both homicide and suicide\n    return data;\n  } else if (intent == 2) {\n    // homicide\n    return data.filter(function(d) { return d.Intent === \"Homicide\"});\n  } else {\n    // suicide\n    return data.filter(function(d) { return d.Intent === \"Suicide\"});\n  }\n}\n\n// read in CSV data\nconst csvFile = require(\"./fullData.csv\");\nd3.csv(csvFile, function(d) {\n        d.Deaths = +d.Deaths;\n        d.Population = +d.Population;\n        d.Rate = parseFloat(d.Rate);\n        return d;\n}).then(function(d) {\n    var $intentSelector = document.getElementById(\"intent-select\");\n    var intentData = getFilteredData(d, $intentSelector.value);\n\n    enterCircles(intentData);\n\n    $intentSelector.onchange = function(e) {\n      console.log($intentSelector.value);\n      var intent = e.target.value;\n      var intentData = getFilteredData(d, intent);\n\n\n      updateCircles(intentData);\n      //exitCircles(intentData);\n      enterCircles(intentData);\n\n    };\n})\n\n// hard cap @ 6 circles, so hard math was performed on rendering\n// hard padding @ 50 on each side, so actual svg is 500x500\nfunction enterCircles(data) {\n  // scale.domain([0, d3.max(data, function(d) { return d.Deaths; })])\n  //     .range([0, d3.max(data, function(d) { return d.Rate; })]); // idk\n\n  var nestedData = d3.nest()\n    .key(function(d) { return d.Race;})\n    .rollup(function(d) {\n      return d3.sum(d, function(d) {\n        return Math.round(d.Rate);  // deaths per 100k\n      })\n    })\n    .entries(data);\n\n  var root = d3.hierarchy({children: nestedData})\n    .sum(function(d) { return d.value; })\n\n  var maxValue = getMaxValue(nestedData);\n\n  scale.domain([0, maxValue])\n    .range([20, (diameter) / nestedData.length]);\n\n  console.log(nestedData);\n\n  var node = svg.selectAll(\".node\")\n  .data(pack(root).leaves())\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"node\")\n  .attr(\"transform\", function(d, i) {\n    return \"translate(\" + d.x + \", \" + d.y + \")\";\n  });\n\n  node.append(\"title\")\n    .text(function(d, i) {\n      return d.key + \": \" + d.value;\n    });\n\n  node.append(\"circle\")\n    .transition()\n    .duration(1000)\n    .attr(\"r\", function(d, i) {\n        return scale(d.value);\n    })\n    .attr(\"stroke\", \"black\")\n    .style(\"fill\", function(d,i) {\n        return getRandomColor();\n    });\n\n  node.append(\"text\")\n    .attr(\"dy\", \".2em\")\n    .style(\"text-anchor\", \"middle\")\n    .text(function(d) {\n        return d.data.key;\n    })\n    .attr(\"font-family\", \"sans-serif\")\n    .attr(\"font-size\", function(d){\n        return scale(d.value)/5;\n    })\n    .attr(\"fill\", \"white\");\n\n  node.append(\"text\")\n    .attr(\"dy\", \"1.3em\")\n    .attr(\"class\", \"subtitle\")\n    .style(\"text-anchor\", \"middle\")\n    .text(function(d) {\n        console.log(d);\n        return d.value;\n    })\n    .attr(\"font-family\",  \"Gill Sans\", \"Gill Sans MT\")\n    .attr(\"font-size\", function(d){\n        return scale(d.value)/5;\n    })\n    .attr(\"fill\", \"white\");\n\n  d3.select(self.frameElement)\n    .style(\"height\", diameter + \"px\");\n\n  }\n\nfunction exitCircles(data) {\n// svg.selectAll(\"circles\")\n//     .data(data)\n//     .exit()\n//     .remove();\n  svg.selectAll(\"g\")\n  .remove(); // doesn't allow transitions, but deletes properly.\n}\n\nfunction updateCircles(data) { \n\n  var nestedData = d3.nest()\n  .key(function(d) { return d.Race;})\n  .rollup(function(d) {\n    return d3.sum(d, function(d) {\n      return Math.round(d.Rate);  // deaths per 100k\n    })\n  })\n  .entries(data);\n\nvar root = d3.hierarchy({children: nestedData})\n  .sum(function(d) { return d.value; })\n\nvar maxValue = getMaxValue(nestedData);\n\nscale.domain([0, maxValue])\n  .range([20, (diameter) / nestedData.length]);\n\n  var node = svg.selectAll(\".node\")\n  .data(pack(root).leaves())\n  .transition()\n  .duration(2000)\n  .attr(\"transform\", function(d, i) {\n    return \"translate(\" + d.x + \", \" + d.y + \")\";\n  })\n  .call(function(node) {\n    node.select(\"circle\")\n    .attr(\"r\", function(d, i) {\n        return scale(d.value);\n    });\n\n    node.select(\"text\")\n    .attr(\"dy\", \".2em\")\n    .style(\"text-anchor\", \"middle\")\n    .text(function(d) {\n        return d.data.key;\n    })\n    .attr(\"font-family\", \"sans-serif\")\n    .attr(\"font-size\", function(d){\n        return scale(d.value)/5;\n    })\n    .attr(\"fill\", \"white\");\n\n    node.select(\".subtitle\")\n    .attr(\"dy\", \"1.3em\")\n    .style(\"text-anchor\", \"middle\")\n    .text(function(d) {\n        console.log(d);\n        return d.value;\n    })\n    .attr(\"font-family\",  \"Gill Sans\", \"Gill Sans MT\")\n    .attr(\"font-size\", function(d){\n        return scale(d.value)/5;\n    })\n    .attr(\"fill\", \"white\");\n\n    d3.select(self.frameElement)\n    .style(\"height\", diameter + \"px\");\n  });\n\n\n\n    \n}\n\n// differentiation on refresh\nfunction getRandomColor() {\nvar letters = '0123456789ABCDEF';\nvar color = '#';\nfor (var i = 0; i < 6; i++) {\n  color += letters[Math.floor(Math.random() * 16)];\n}\nreturn color;\n}\n\nfunction getMaxValue(d) {\n  var currMax = d[0].value;\n  for (var i = 1; i < d.length; i++) {\n    currMax = Math.max(currMax, d[i].value);\n  }\n  return currMax;\n}"]}